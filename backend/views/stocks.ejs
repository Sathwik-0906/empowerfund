<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Stock Market Data - EmpowerFund</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/css/styles.css">
  <style>
    /* Basic Reset */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Poppins', sans-serif;
      line-height: 1.6;
      background-color: #f4f4f9;
      color: #333;
    }

    header {
      background: linear-gradient(135deg, #6a11cb, #2575fc);
      color: #fff;
      padding: 2rem;
      text-align: center;
    }

    header h1 {
      font-size: 2.5rem;
      margin-bottom: 0.5rem;
    }

    header p {
      font-size: 1.2rem;
      opacity: 0.9;
    }

    nav {
      display: flex;
      justify-content: center;
      background: #fff;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      padding: 1rem;
    }

    nav a {
      color: #2575fc;
      text-decoration: none;
      margin: 0 1rem;
      font-weight: 600;
      transition: color 0.3s ease;
    }

    nav a:hover {
      color: #6a11cb;
    }

    .alert {
      padding: 1rem;
      margin: 1rem auto;
      max-width: 800px;
      border-radius: 5px;
      text-align: center;
    }

    .alert-error {
      background: #ffebee;
      color: #c62828;
      border: 1px solid #c62828;
    }

    .section {
      padding: 2rem;
      background: #fff;
      margin: 2rem auto;
      max-width: 800px;
      border-radius: 10px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .section form {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .section label {
      font-size: 1.1rem;
      font-weight: 600;
      color: #555;
    }

    .section input {
      width: 100%;
      padding: 0.75rem;
      border: 1px solid #ddd;
      border-radius: 5px;
      font-size: 1rem;
      transition: border-color 0.3s ease;
    }

    .section input:focus {
      border-color: #2575fc;
      outline: none;
    }

    .section button {
      background: #2575fc;
      color: #fff;
      padding: 0.75rem 2rem;
      border: none;
      border-radius: 5px;
      font-size: 1rem;
      font-weight: 600;
      cursor: pointer;
      transition: background 0.3s ease;
    }

    .section button:hover {
      background: #6a11cb;
    }

    .loading, .error {
      display: none;
      font-size: 1rem;
      margin-top: 1rem;
    }

    .loading {
      color: #2575fc;
    }

    .error {
      color: #c62828;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 1.5rem;
    }

    th, td {
      padding: 0.75rem;
      border: 1px solid #ddd;
      text-align: center;
    }

    th {
      background-color: #f4f4f4;
      font-weight: 600;
    }

    tr:hover {
      background-color: #f9f9f9;
    }

    footer {
      text-align: center;
      padding: 1rem;
      background: #333;
      color: #fff;
      margin-top: 2rem;
    }

    footer p {
      margin: 0;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      nav {
        flex-direction: column;
        align-items: center;
      }

      nav a {
        margin: 0.5rem 0;
      }

      header h1 {
        font-size: 2rem;
      }

      header p {
        font-size: 1rem;
      }

      .section {
        padding: 1rem;
      }

      table {
        font-size: 0.9rem;
      }

      th, td {
        padding: 0.5rem;
      }
    }
  </style>
</head>
<body>
  <header>
    <h1>Stock Market Data</h1>
    <p>Fetch real-time stock market data.</p>
  </header>

  <nav>
    <a href="/dashboard">Home</a>
    <a href="/sip">SIP Calculator</a>
    <a href="/emi">EMI Calculator</a>
    <a href="/investments">Investment Options</a>
    <a href="/stocks">Stock Market Data</a>
    <a href="/api/users/logout">Logout</a>
  </nav>

  <!-- Display flash messages (if any) -->
  <% if (messages.error) { %>
    <div class="alert alert-error">
      <%= messages.error %>
    </div>
  <% } %>

  <div class="section">
    <form id="stockForm">
      <label for="symbol">Stock Symbol:</label>
      <input type="text" id="symbol" name="symbol" placeholder="e.g., AAPL" required>
      <button type="submit">Fetch Data</button>
      <p class="loading">Fetching data...</p>
      <p class="error"></p>
    </form>
    <div id="stockData"></div>
  </div>

  <footer>
    <p>&copy; 2025 EmpowerFund. All rights reserved.</p>
  </footer>

  <script>
    document.getElementById('stockForm').addEventListener('submit', async (e) => {
      e.preventDefault();

      const symbol = document.getElementById('symbol').value.trim().toUpperCase();
      const errorElement = document.querySelector('.error');
      const loadingElement = document.querySelector('.loading');
      const resultElement = document.getElementById('stockData');

      if (!symbol) {
        errorElement.textContent = "Please enter a stock symbol.";
        errorElement.style.display = "block";
        return;
      }

      errorElement.style.display = "none";
      loadingElement.style.display = "block";
      resultElement.innerHTML = "";

      try {
        // Simulate API call with a delay
        setTimeout(() => {
          const mockData = {
            'Meta Data': {
              '2. Symbol': symbol,
              '3. Last Refreshed': '2023-10-05',
            },
            'Time Series (Daily)': {
              '2023-10-05': {
                '1. open': '170.50',
                '2. high': '172.00',
                '3. low': '169.80',
                '4. close': '171.20',
                '5. volume': '1200000',
              },
              '2023-10-04': {
                '1. open': '169.00',
                '2. high': '170.50',
                '3. low': '168.50',
                '4. close': '170.00',
                '5. volume': '1100000',
              },
              '2023-10-03': {
                '1. open': '168.00',
                '2. high': '169.50',
                '3. low': '167.50',
                '4. close': '168.80',
                '5. volume': '1000000',
              },
            },
          };

          loadingElement.style.display = "none";

          if (!mockData || !mockData['Meta Data'] || !mockData['Time Series (Daily)']) {
            errorElement.textContent = "No data available for this symbol.";
            errorElement.style.display = "block";
            return;
          }

          resultElement.innerHTML = formatStockData(mockData);
        }, 1000); // Simulate 1 second delay for API call
      } catch (error) {
        loadingElement.style.display = "none";
        errorElement.textContent = "Server error. Please try again later.";
        errorElement.style.display = "block";
      }
    });

    function formatStockData(data) {
      const metaData = data['Meta Data'];
      const timeSeries = data['Time Series (Daily)'];
      let html = `<h3>${metaData['2. Symbol']} - ${metaData['3. Last Refreshed']}</h3>`;

      html += `<table>
          <thead>
              <tr>
                  <th>Date</th>
                  <th>Open</th>
                  <th>High</th>
                  <th>Low</th>
                  <th>Close</th>
                  <th>Volume</th>
              </tr>
          </thead>
          <tbody>`;

      let count = 0;
      for (const date in timeSeries) {
        if (count >= 3) break; // Limit to last 3 days
        const dailyData = timeSeries[date];
        html += `<tr>
            <td>${date}</td>
            <td>${dailyData['1. open']}</td>
            <td>${dailyData['2. high']}</td>
            <td>${dailyData['3. low']}</td>
            <td>${dailyData['4. close']}</td>
            <td>${dailyData['5. volume']}</td>
        </tr>`;
        count++;
      }

      html += `</tbody></table>`;
      return html;
    }
  </script>
</body>
</html>