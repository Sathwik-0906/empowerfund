<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stock Market - EmpowerFund</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link rel="stylesheet" href="/css/stocks.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>

    <aside class="sidebar-final">
        <div class="sidebar-header"><h2 class="sidebar-title">EmpowerFund</h2></div>
        <nav class="sidebar-nav">
            <a href="/dashboard"><i class="fas fa-home"></i> Overview</a>
            <a href="/investments"><i class="fas fa-chart-line"></i> Investments</a>
            <a href="/stocks" class="active"><i class="fas fa-chart-bar"></i> Stock Market</a>
            <a href="/sip"><i class="fas fa-calculator"></i> SIP Calculator</a>
            <a href="/emi"><i class="fas fa-file-invoice-dollar"></i> EMI Calculator</a>
            <a href="#"><i class="fas fa-book-open"></i> Resources</a>
        </nav>
        <div class="sidebar-user-profile">
            <div class="user-info">
                <span class="user-name"><%= user.name %></span>
                <span class="user-email"><%= user.email %></span>
            </div>
            <a href="/api/users/logout" class="logout-link"><i class="fas fa-sign-out-alt"></i></a>
        </div>
    </aside>

    <main class="main-content">
        <div class="page-layout">
            <div class="watchlist-panel">
                <h2>My Watchlist</h2>
                <div id="watchlistContainer">
                    <p style="padding: 1rem 0; color: #6c757d;">Loading watchlist...</p>
                </div>
                <form id="addStockForm" class="add-stock-form">
                    <input type="text" id="newStockSymbol" placeholder="e.g., GOOGL" required>
                    <button type="submit">+</button>
                </form>
            </div>

            <div class="details-panel">
                <div id="detailsPlaceholder" class="details-placeholder">
                    <p>Select a stock from your watchlist to view details.</p>
                </div>
                <div id="loader" class="loader"><p>Fetching data...</p></div>
                <div id="stockDetails" class="stock-details">
                    <div class="stock-header">
                        <h3 id="stockName"></h3>
                        <p id="stockSymbol"></p>
                    </div>
                    <div class="stock-tabs">
                        <button class="tab-btn active" data-tab="overview">Overview</button>
                        <button class="tab-btn" data-tab="chart">Chart</button>
                    </div>
                    <div id="overview" class="tab-content active">
                        <div class="overview-grid">
                            <div class="stat-card">
                                <div class="stat-card-title"><i class="fas fa-dollar-sign"></i><span>Price</span></div>
                                <strong id="price" class="stat-card-value"></strong>
                            </div>
                            <div class="stat-card">
                                <div class="stat-card-title"><i class="fas fa-chart-line"></i><span>Change</span></div>
                                <strong id="change" class="stat-card-value"></strong>
                            </div>
                            <div class="stat-card">
                                <div class="stat-card-title"><i class="fas fa-building"></i><span>Company</span></div>
                                <strong id="companyName" class="stat-card-value"></strong>
                            </div>
                            <div class="stat-card">
                                <div class="stat-card-title"><i class="fas fa-industry"></i><span>Industry</span></div>
                                <strong id="industry" class="stat-card-value"></strong>
                            </div>
                        </div>
                    </div>
                    <div id="chart" class="tab-content" style="height: 400px;">
                        <canvas id="priceChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </main>
<script>
    const watchlistContainer = document.getElementById('watchlistContainer');
    const addStockForm = document.getElementById('addStockForm');
    const newStockSymbolInput = document.getElementById('newStockSymbol');
    const detailsPlaceholder = document.getElementById('detailsPlaceholder');
    const loader = document.getElementById('loader');
    const stockDetails = document.getElementById('stockDetails');
    const tabs = document.querySelectorAll('.tab-btn');
    const tabContents = document.querySelectorAll('.tab-content');
    let priceChart;
    let userWatchlist = <%- JSON.stringify(user.watchlist || []) %>;

    function renderWatchlist() {
        if (userWatchlist.length === 0) {
            watchlistContainer.innerHTML = '<p style="color: var(--text-secondary); text-align: center; padding: 1rem 0;">Your watchlist is empty.</p>';
        } else {
            watchlistContainer.innerHTML = userWatchlist.map(symbol => `
                <div class="watchlist-item" data-symbol="${symbol}">
                    <span>${symbol}</span>
                    <button class="remove-btn" data-symbol="${symbol}">&times;</button>
                </div>
            `).join('');
        }
    }

    async function fetchStockDetails(symbol) {
        loader.style.display = 'block';
        detailsPlaceholder.style.display = 'none';
        stockDetails.style.display = 'none';

        document.querySelectorAll('.watchlist-item').forEach(item => {
            item.classList.toggle('active', item.dataset.symbol === symbol);
        });
        
        try {
            const response = await fetch(`/api/stocks/data/${symbol}`);
            const data = await response.json();

            if (!response.ok) {
                alert(data.error);
                loader.style.display = 'none';
                detailsPlaceholder.style.display = 'block';
                return;
            }

            const isPositive = data.profile.changes >= 0;
            document.getElementById('stockName').textContent = data.profile.companyName || 'N/A';
            document.getElementById('stockSymbol').textContent = data.profile.symbol || 'N/A';
            document.getElementById('price').textContent = `$${(data.profile.price || 0).toFixed(2)}`;
            const changeEl = document.getElementById('change');
            changeEl.textContent = `${(data.profile.change || 0).toFixed(2)} (${(data.profile.changesPercentage || 0).toFixed(2)}%)`;
            changeEl.style.color = isPositive ? '#28a745' : '#dc3545';
            document.getElementById('companyName').textContent = data.profile.companyName;
            document.getElementById('industry').textContent = data.profile.industry;

            if (data.history && data.history.length > 0) {
                const labels = data.history.map(h => h.date).reverse();
                const prices = data.history.map(h => h.close).reverse();
                renderChart(labels, prices, isPositive);
            }

            loader.style.display = 'none';
            stockDetails.style.display = 'block';
            document.querySelector('.tab-btn[data-tab="overview"]').click();

        } catch (err) { 
            console.error(err);
            loader.style.display = 'none';
            detailsPlaceholder.style.display = 'block';
            detailsPlaceholder.textContent = 'An error occurred while fetching data.';
        }
    }

    function renderChart(labels, data, isPositive) {
        const ctx = document.getElementById('priceChart').getContext('2d');
        if (priceChart) { priceChart.destroy(); }
        priceChart = new Chart(ctx, {
            type: 'line',
            data: { labels: labels, datasets: [{
                label: 'Closing Price', data: data,
                borderColor: isPositive ? '#28a745' : '#dc3545',
                backgroundColor: isPositive ? 'rgba(40, 167, 69, 0.1)' : 'rgba(220, 53, 69, 0.1)',
                fill: true, tension: 0.1, pointRadius: 0
            }]},
            options: { responsive: true, maintainAspectRatio: false, scales: { x: { display: false } }, plugins: { legend: { display: false } } }
        });
    }

    addStockForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const newSymbol = newStockSymbolInput.value.trim().toUpperCase();
        if (newSymbol && !userWatchlist.includes(newSymbol)) {
            const response = await fetch('/api/stocks/watchlist/add', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ symbol: newSymbol })
            });
            if (!response.ok) { alert((await response.json()).error); return; }
            userWatchlist = await response.json();
            renderWatchlist();
            fetchStockDetails(newSymbol);
        }
        newStockSymbolInput.value = '';
    });

    watchlistContainer.addEventListener('click', async (e) => {
        if (e.target.closest('.watchlist-item')) {
            const symbol = e.target.closest('.watchlist-item').dataset.symbol;
            if (e.target.classList.contains('remove-btn')) {
                e.stopPropagation();
                const response = await fetch('/api/stocks/watchlist/remove', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ symbol: symbol })
                });
                userWatchlist = await response.json();
                renderWatchlist();
                stockDetails.style.display = 'none';
                detailsPlaceholder.style.display = 'block';
            } else { fetchStockDetails(symbol); }
        }
    });

    tabs.forEach(tab => {
        tab.addEventListener('click', () => {
            tabs.forEach(t => t.classList.remove('active'));
            tab.classList.add('active');
            tabContents.forEach(content => {
                content.classList.toggle('active', content.id === tab.dataset.tab);
            });
        });
    });

    document.addEventListener('DOMContentLoaded', renderWatchlist);
</script>

</body>
</html>