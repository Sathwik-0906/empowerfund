<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>SIP Calculator - EmpowerFund</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/css/styles.css">
  <style>
    /* Basic Reset */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Poppins', sans-serif;
      line-height: 1.6;
      background-color: #f4f4f9;
      color: #333;
    }

    header {
      background: linear-gradient(135deg, #6a11cb, #2575fc);
      color: #fff;
      padding: 2rem;
      text-align: center;
    }

    header h1 {
      font-size: 2.5rem;
      margin-bottom: 0.5rem;
    }

    header p {
      font-size: 1.2rem;
      opacity: 0.9;
    }

    nav {
      display: flex;
      justify-content: center;
      background: #fff;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      padding: 1rem;
    }

    nav a {
      color: #2575fc;
      text-decoration: none;
      margin: 0 1rem;
      font-weight: 600;
      transition: color 0.3s ease;
    }

    nav a:hover {
      color: #6a11cb;
    }

    .alert {
      padding: 1rem;
      margin: 1rem auto;
      max-width: 800px;
      border-radius: 5px;
      text-align: center;
    }

    .alert-error {
      background: #ffebee;
      color: #c62828;
      border: 1px solid #c62828;
    }

    .section {
      padding: 2rem;
      background: #fff;
      margin: 2rem auto;
      max-width: 800px;
      border-radius: 10px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .section form {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .section label {
      font-size: 1.1rem;
      font-weight: 600;
      color: #555;
    }

    .section input {
      width: 100%;
      padding: 0.75rem;
      border: 1px solid #ddd;
      border-radius: 5px;
      font-size: 1rem;
      transition: border-color 0.3s ease;
    }

    .section input:focus {
      border-color: #2575fc;
      outline: none;
    }

    .section button {
      background: #2575fc;
      color: #fff;
      padding: 0.75rem 2rem;
      border: none;
      border-radius: 5px;
      font-size: 1rem;
      font-weight: 600;
      cursor: pointer;
      transition: background 0.3s ease;
    }

    .section button:hover {
      background: #6a11cb;
    }

    .loading, .error {
      display: none;
      font-size: 1rem;
      margin-top: 1rem;
      text-align: center;
    }

    .loading {
      color: #2575fc;
    }

    .error {
      color: #c62828;
    }

    #futureValue {
      font-size: 1.5rem;
      font-weight: 600;
      color: #2575fc;
      margin-top: 1rem;
      text-align: center;
      opacity: 0;
      transition: opacity 0.5s ease;
    }

    #futureValue.show {
      opacity: 1;
    }

    footer {
      text-align: center;
      padding: 1rem;
      background: #333;
      color: #fff;
      margin-top: 2rem;
    }

    footer p {
      margin: 0;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      nav {
        flex-direction: column;
        align-items: center;
      }

      nav a {
        margin: 0.5rem 0;
      }

      header h1 {
        font-size: 2rem;
      }

      header p {
        font-size: 1rem;
      }

      .section {
        padding: 1rem;
      }
    }
  </style>
</head>
<body>
  <header>
    <h1>SIP Calculator</h1>
    <p>Calculate the future value of your systematic investments.</p>
  </header>

  <nav>
    <a href="/dashboard">Home</a>
    <a href="/sip">SIP Calculator</a>
    <a href="/emi">EMI Calculator</a>
    <a href="/investments">Investment Options</a>
    <a href="/stocks">Stock Market Data</a>
    <a href="/api/users/logout">Logout</a>
  </nav>

  <!-- Display flash messages (if any) -->
  <% if (messages.error) { %>
    <div class="alert alert-error">
      <%= messages.error %>
    </div>
  <% } %>

  <div class="section">
    <form id="sipForm">
      <label for="monthlyInvestment">Monthly Investment (₹):</label>
      <input type="number" id="monthlyInvestment" name="monthlyInvestment" placeholder="e.g., 5000" required>

      <label for="annualInterestRate">Annual Interest Rate (%):</label>
      <input type="number" id="annualInterestRate" name="annualInterestRate" placeholder="e.g., 12" required>

      <label for="years">Investment Period (Years):</label>
      <input type="number" id="years" name="years" placeholder="e.g., 10" required>

      <button type="submit" class="btn">Calculate</button>
      <p class="loading">Calculating...</p>
      <p class="error"></p>
    </form>
    <p><strong>Future Value:</strong> <span id="futureValue"></span></p>
  </div>

  <footer>
    <p>&copy; 2025 EmpowerFund. All rights reserved.</p>
  </footer>

  <script>
    document.getElementById('sipForm').addEventListener('submit', async (e) => {
      e.preventDefault();

      const monthlyInvestment = parseFloat(document.getElementById('monthlyInvestment').value);
      const annualInterestRate = parseFloat(document.getElementById('annualInterestRate').value);
      const years = parseFloat(document.getElementById('years').value);
      const errorElement = document.querySelector('.error');
      const loadingElement = document.querySelector('.loading');
      const resultElement = document.getElementById('futureValue');

      // Reset UI
      errorElement.style.display = "none";
      resultElement.classList.remove('show');
      resultElement.textContent = "";

      // Validate inputs
      if (isNaN(monthlyInvestment) {
        errorElement.textContent = "Please enter a valid monthly investment.";
        errorElement.style.display = "block";
        return;
      }
      if (isNaN(annualInterestRate)) {
        errorElement.textContent = "Please enter a valid annual interest rate.";
        errorElement.style.display = "block";
        return;
      }
      if (isNaN(years)) {
        errorElement.textContent = "Please enter a valid investment period.";
        errorElement.style.display = "block";
        return;
      }
      if (monthlyInvestment <= 0 || annualInterestRate <= 0 || years <= 0) {
        errorElement.textContent = "Values must be greater than zero.";
        errorElement.style.display = "block";
        return;
      }

      // Show loading state
      loadingElement.style.display = "block";

      // Simulate API call with a delay
      setTimeout(() => {
        const monthlyRate = annualInterestRate / 100 / 12;
        const months = years * 12;
        const futureValue = monthlyInvestment * ((Math.pow(1 + monthlyRate, months) - 1) / monthlyRate) * (1 + monthlyRate);

        // Hide loading and display result
        loadingElement.style.display = "none";
        resultElement.textContent = `₹${futureValue.toFixed(2)}`;
        resultElement.classList.add('show');
      }, 1000); // Simulate 1 second delay for API call
    });
  </script>
</body>
</html>